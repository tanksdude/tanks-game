0.2.1 (obviously definitely not here)
switched back to static vertex buffers
* batching probably not possible in this state but I'll save that for another day
better system for tankpowers adjusting tank values
other better adjusting stuff

0.2.0 (obviously not here)
all objects stream their vertices to VRAM
* I was expecting a massive performance increase but got fewer frames and a VRAM spike (~4x worse performance)
* batching is probably easier to implement now
stationary turret shows its barrel

0.1.4 "gamify"
actual levels used instead of only the developer level
* ackchyually there were other levels in the game but they were only selectable if you changed a few lines
other cleanup that makes developing easier:
* constants file fixed up, now holds default constant values for things (stuff like tank radius and game width/height)
* class managers (bullet, tank, hazard, key presses, etc.)
* tick() separated into parts (not a big change but... cleanup!)
* initialization stuff in main() cleaned up
constants and speeds restored to faster JS settings because slow Tanks isn't fun Tanks
* not all speeds are faster and not all are JS settings but it's better now

0.1.3
hazards (no hazard powers yet)
stationary turret mostly implemented
* doesn't display its shooting angle 

0.1.2.1
added a fun level: only has simple powerups and big (fun with superfast shooting)
big bullet size stacks (and other stuff can also stack)

0.1.2
bullet acceleration (needs work)
corridor level
transparency in color is interpreted (not fully implemented) (also disabled now)
powerups: grenade, fire, blast

0.1.1
invincibility n' stuff (invincibility, big, megadeath)
cleaned up how powers interacted

0.1.0:
rendering on GPU!
lost the ability to draw tank names but that's okay

0.0.7.1:
cleanup for me (very little actual change)

0.0.7 and before:
stuff. primarily the framework and some powers to test the framework. (look at commit history)

future notes:
0.2.A: redo tank/bullet initialization; system for applying attribute changes
0.2.A+1: bulletpower shooting dependencies removed from tankpowers (so a bulletpower doesn't need a tankpower on a tank to exist; bulletpower can tell tank what things need to change (tanks don't hold bulletpowers which is why this is merely a future note and not an already-merged commit))
0.A.B: graphs for diagnostics
0.3.0: an ini file
0.X.0: big change in levels or powers or something else, like bulletpower memory management (std::shared_ptr)
0.A.0: batching
0.B.0: multithreading? (std::async to start)
1.0.0: all levels, powers, and other stuff that I want
2.0.0: level editor and/or power editor and/or game engine something thing (save for sequel instead?)

other note: consider SDL instead of FreeGLUT
