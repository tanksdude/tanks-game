0.3.0 "complete" (obviously definitely not here)
* new game mode: infinite world!
    * single-player only
    * the point is just to explore
    * have fun!
* some unit tests?
* lots of new stuff
* powerups:
    * sword
    * hazard powers?
    * megadeath update?
    * bouncing rework
        * something like bool applyBounceUpdate() to bulletpower?

0.2.5 "done" (obviously not here)
* rudimentary custom powers and levels!
    * turns out, DLLs were too complicated
    * look at the mods folder for examples
* ini file
    * allows for some customization
    * now it's possible to view certain levels/whatever that exist but aren't playable
* some documentation
    * very minimal, but at least there's now an easy-to-read list of everything in the game
* graphics: batched rendering
    * still not very efficient, but it's something
* slight multithreading!
    * set number of threads in the ini
* mild QoL improvements to displaying things
    * tank multi-powers are more obvious
    * old tank death graphic (black to white gradient)
    * lightning hazards and no bullet zones are significantly easier to spot
    * sorry colorblind people, but powerups are still distinguishable by color only; would make sense to use an image instead, but that'll happen in a sequel
* overhaul collision
    * two passes for collision (like proper game physics)
    * more efficient
    * TODO: actually proper physics, meaning earlier objects don't get priority over later ones anymore
* powerups:
    * TODO: megadeath update
    * custom powers exist!
    * growing and degrading powerups mix better
    * option to make "extra cannons" (on triple and shotgun) behave like real cannons
    * [dev] color changing: changes color based on proximity to other tank
    * [dev] backwards movement: by pressing the special key (currently e and /), the tank moves backwards
    * [dev] wall sparks: makes extra bullets when it hits a wall
    * [dev] triple spread: the bullets spread out from the point they were shot at instead of being parallel
    * [dev] ring shooter: shoots a ring of 8 bullets; like multishot if everything shot the same direction
    * [dev] "ancient" megadeath: an accelerating, tracking, wallhacking bullet
* hazards:
    * patrolling turret: moves along its path
    * mother turret: creates turrets
    * ginormous turret: tells its turrets where to shoot
    * TODO: teleporter?, reflecktor?
    * TODO: [dev] selective no bullet zone (doesn't affect a certain teamID)
* levels:
    * TODO: old versions of some levels (they're barely different but may as well include them)
        * evened corridors might be the only one
    * custom levels exist!
    * "tight patrolling corridor"
    * "dangerous center"
    * "untraditional divider"
    * [dev] "unnamed3" and "unnamed4": tests with mother turret and ginormous turret
    * portal level, without the portals (just so every old level is present)
    * moved concealed powerups, lightning corners, and lone turret levels out of vanilla because they were boring
    * renamed "corridor" level back to "evened corridors" because I realized most levels followed the "adjective_noun" pattern
* level effects:
    * magnetism
* minor things:
    * update to VS2022
    * fullscreen toggle key changed to F11
    * overhaul priority handling (again)
    * *massive* cleanup across the entire project, multiple times; no seriously it was a lot
    * [dev] power, other stuff is poison: walls and hazards kill on contact
    * [dev] power, "weird extra cannons": just a test of adding extra cannon points at weird angles
    * [dev] hazard, "wall": it's a "wall," that's it
    * attempted: tried GLFW instead of FreeGLUT, didn't like it

0.2.4
* changed name from "Tanks" to "PowerTanks" so this game might actually become discoverable
* switch to 64-bit because no modern computer should be 32-bit
* made some changes to the renderer
    * will be better in a later version
* cleanup: changed file structure somewhat and formatting a lot
    * normal C++ class and function stuff
    * replace x-comp, y-comp, angle variables with singular vector variable
        * fixed edgecases for things that need to detect angles
* drawing layers: under, normal, effects, top, debug
* level effects added
    * all JS level effects in! (except portal)
        * wind, ice, minefield, invisible walls
        * portal and invisible walls technically weren't level effects in JS but should be counted as one
    * respawning powerups
        * likely very useful
* powerups:
    * all JS powers in!
        * mines, shotgun, tracking
        * barrier (previously called life)
    * shield (multi-hit barrier)
    * [dev] annoying: pushes tank away instead of killing it
    * [dev] ultrabounce: bounce bullets push away walls when bouncing
* levels:
    * all JS levels in! (except portal)
        * "hiding places" and "lone turret"
        * "lightning corners" (it was cut, but now it's back)
        * "winning path" (invisible level), "tricky maneuvering" (wind level), "mine heaven" (ice and mines level)
            * these levels didn't get names in JS...
    * "sneaky reward" (... this is actually my first true level in this version, wow)
    * "timed reward" (moving walls) (should be a dev level but I wanna show off the moving walls)
    * [dev] "nowall1": a test of a level without walls
    * [dev] "unnamed1" and "unnamed2": a generic level and a level with a zig-zag of walls
* minor things:
    * major cleanup (like massive cleanup, absolutely humongous, gigantically colossal)
    * [dev] level effect, symmetric tanks: forces tanks to have symmetric positions
    * minor overhaul (oxymoron?) of end game and score handling
    * inserting stuff through the dev "menu" is easier

0.2.3 "features"
* most things from JS Tanks in!!!
* powerups:
    * banana power!
    * godmode (still needs some work)
    * [dev] "inversion": switches turning direction of tank
* hazards:
    * all JS hazards in!
        * other lightning hazards
            * vertical lightning
            * lightning rectangle and circle
        * no bullet zone (rectangular and circular)
        * targeting turret
    * hazard randomization
* level: "many hazards" (from JS Tanks)
* ability to weight levels, powers, and hazards when selecting them randomly
* minor things:
    * tankpower bullet attribute changes moved to bulletpowers (a moderate rewrite was needed)
    * a "special key" for tanks (does nothing right now)
    * visual cue for tank death, refactored handling of tank (and other) death
    * more cleanup
    * fullscreen toggle (press F1) (it's technically borderless fullscreen)
    * actually fixed homing power... whoops...

0.2.2.2
* two more levels to make the game less empty
    * I'm not very original, so they're from JS Tanks...
    * "few obstacles" and "concealed powerups"
* adding walls and powerups symmetrically to a level is now much easier

0.2.2.1
* cleanup
    * made levels function more like powerups (to a developer)
* homing power stopped working last version... it works now... whoops...

0.2.2
* horizontal lightning hazard
    * other lightning hazards will come later
* rectangular and circular lava hazards
* complete priority handling overhaul
* minor things:
    * levels and powerups can be grouped
    * a start towards a "game manager"
    * misc cleanup

0.2.1
* switched back to static vertex buffers
    * batching probably not possible in this state but I'll save that for another day
* better system for tankpowers adjusting tank values
* a few things moved out of main.cpp (mostly event handlers)
* big (and megadeath) bullet can destroy turrets
* glm moved to Dependencies from res/vendor

0.2.0
* all objects stream their vertices to VRAM
    * I was expecting a massive performance increase but got fewer frames and a VRAM spike (~4x worse performance)
    * batching is probably easier to implement now
* stationary turret shows its barrel

0.1.4 "gamify"
* actual levels used instead of only the developer level
    * ackchyually there were other levels in the game but they were only selectable if you changed a few lines
* other cleanup that makes developing easier:
    * constants file fixed up, now holds default constant values for things (stuff like tank radius and game width/height)
    * class managers (bullet, tank, hazard, key presses, etc.)
    * tick() separated into parts (not a big change but... cleanup!)
    * initialization stuff in main() cleaned up
* constants and speeds restored to faster JS settings because slow Tanks isn't fun Tanks
    * not all speeds are faster and not all are JS settings but it's better now

0.1.3
* hazards (no hazard powers yet)
* stationary turret mostly implemented
    * doesn't display its shooting angle 

0.1.2.1
* added a fun level: only has simple powerups and big (fun with superfast shooting)
* big bullet size stacks (and other stuff can also stack)

0.1.2
* bullet acceleration (needs work)
* corridor level
* transparency in color is interpreted (not fully implemented) (also disabled now)
* powerups: grenade, fire, blast

0.1.1
* invincibility n' stuff (invincibility, big, megadeath)
* cleaned up how powers interacted

0.1.0
* rendering on GPU!
* lost the ability to draw tank names but that's okay

0.0.7.1
* cleanup for me (very little actual change)

0.0.7 and before
* primarily the framework and some powers to test the framework



other note: consider SDL or SFML instead of FreeGLUT

sequel notes:
draw an image for powerups instead of just a color
arbitrary convex shapes for walls and hazards (would also allow spinning stuff) and arbitrary game world size
proper structure, built for unit testing and multithreading
AI and online play (intended LAN but theoretically anywhere, as long as the input buffer is configurable)
variable physics rate

GitHub: https://github.com/tanksdude/tanks-game
JS Tanks (old): https://uncreativeusername.neocities.org/tanks.html
