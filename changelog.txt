0.2.0 (obviously definitely not here)
all objects load their vertices onto VRAM when initialized (instead of using one circle/rect and modifying it)
* (that's a massive performance increase on modern GPUs... if I did batching; only a large performance increase instead)
* batching is probably easier to implement now

0.1.4 "gamify" (obviously not here)
actual levels used instead of only the developer level
* ackchyually there were other levels in the game but they were only selectable if you changed a few lines
other cleanup that makes developing easier:
* constants file fixed up, now primarily holds default constant values for things (stuff like tank radius)
* class managers (bullet, tank, hazard, key presses, etc.)
* tick() separated into parts (not a big change but... cleanup!)
constants and speeds restored to faster JS settings because slow Tanks isn't fun Tanks

0.1.3
hazards (no hazard powers yet)
stationary turret mostly implemented
* doesn't display its shooting angle 

0.1.2.1
added a fun level: only has simple powerups and big (fun with superfast shooting)
big bullet size stacks (and other stuff can also stack)

0.1.2
bullet acceleration (needs work)
corridor level
transparency in color is interpreted (not fully implemented) (also disabled now)
powerups: grenade, fire, blast

0.1.1
invincibility n' stuff (invincibility, big, megadeath)
cleaned up how powers interacted

0.1.0:
rendering on GPU!
lost the ability to draw tank names but that's okay

0.0.7.1:
cleanup for me (very little actual change)

0.0.7 and before:
stuff. primarily the framework and some powers to test the framework. (look at commit history)

future notes:
0.2.0: fix constants file (PI, object holders)
0.X.0: big change in levels or powers or something else, like bulletpower memory management (std::shared_ptr)
A.B.0: multithreading? (std::async to start)
1.0.0: all levels, powers, and other stuff that I want
2.0.0: level editor and/or power editor and/or game engine something thing (save for sequel instead?)

other note: consider SDL instead of FreeGLUT
